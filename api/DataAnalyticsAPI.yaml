swagger: '2.0'
info:
  description: Beta version of the DITAS Data Analytics REST API
  version: 0.0.3
  title: DITAS Data analytics
  contact:
    email: bogdan.despotov@cloudsigma.com
basePath: /data-analytics
tags:
  - name: Metrics
    description: Retrieval of metrics based on blueprint method
  - name: Resources
    description: Retrieval of cluster defined resources and current resource usage
schemes:
  - https
paths:
  /metrics/:
    get:
      tags:
        - Metrics
      summary: Get all available methods
      description: Displays available methods based on the deployment blueprint
      operationId: getMethods
      produces:
        - application/json
        - application/xml
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Method'
        '404':
          description: No methods have been found
  '/metrics/{methodId}/':
    get:
      tags:
        - Metrics
      summary: Get aggregated metrics for method id
      description: >-
        Displays aggregated metrics for method id for the whole duration of the
        deployment
      operationId: getMetrics
      produces:
        - application/json
        - application/xml
      parameters:
        - name: methodId
          in: path
          required: true
          description: Method id based on deployment blueprint
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Metrics'
        '400':
          description: Method id is invalid
  '/metrics/{methodId}/responseTime/':
    get:
      tags:
        - Metrics
      summary: Retrieves response times for method id
      description: >-
        The amount of time (usually expressed in seconds) the platform takes to
        provide the output of a specific request.
      operationId: responseTime
      produces:
        - application/json
        - application/xml
      parameters:
        - name: methodId
          in: path
          required: true
          description: Filter response time by method
          type: integer
        - in: query
          name: startTime
          required: true
          type: string
          format: date-time
        - in: query
          name: endTime
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/metricTimeRes'
  '/metrics/{methodId}/availability/':
    get:
      tags:
        - Metrics
      summary: Retrieves availability for method id
      description: 'The time when the service was up and operation, shown in percentages'
      operationId: availability
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: methodId
          required: true
          type: integer
        - in: query
          name: startTime
          required: true
          type: string
          format: date-time
        - in: query
          name: endTime
          required: true
          type: string
          format: date-time
      responses:
        default:
          description: Success
          schema:
            $ref: '#/definitions/metricTimeRes'
  '/metrics/{methodId}/throughput/':
    get:
      tags:
        - Metrics
      summary: Retrieves throughput for method id
      description: >-
        The total amount of work completed in a given time. Considering data
        transmission, it refers to the data transfer rate.
      operationId: throughput
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: methodId
          required: true
          description: Filter throughput by method
          type: integer
        - in: query
          name: startTime
          required: true
          type: string
          format: date-time
        - in: query
          name: endTime
          required: true
          type: string
          format: date-time
      responses:
        default:
          description: Success
          schema:
            $ref: '#/definitions/metricTimeRes'
  '/metrics/{methodId}/volume/':
    get:
      tags:
        - Metrics
      summary: Retrieves volume for method id
      description: >-
        This metric specifies the amount of volume in tuples that the method
        will return
      operationId: volume
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: methodId
          description: Filter volume by method
          required: true
          type: integer
      responses:
        default:
          description: Success
          schema:
            $ref: '#/definitions/metricRes'
  '/metrics/{methodId}/timeliness/':
    get:
      tags:
        - Metrics
      summary: Retrieves timeliness for method id
      description: >-
        Timeliness is a measure between 0 and 1 and evaluates the temporal
        validity of data. 0 means that data are old while a value greater than 0
        means that data are valid
      operationId: timeliness
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: methodId
          description: Filter timeliness by method
          required: true
          type: integer
      responses:
        default:
          description: Success
          schema:
            $ref: '#/definitions/metricRes'
  '/metrics/{methodId}/completeness/':
    get:
      tags:
        - Metrics
      summary: Retrieves completeness for method id
      description: >-
        Process completeness is a value between 0 and 1 measures the ratio
        between the number of values provided and the number of values that the
        data service should provide. It considers null values.
      operationId: completeness
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: methodId
          description: Filter completeness by method
          required: true
          type: integer
      responses:
        default:
          description: Success
          schema:
            $ref: '#/definitions/metricRes'
  /resources/:
    get:
      tags:
        - Resources
      summary: Outputs the resources defined for the whole cluster
      operationId: resources
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resources'
  /resources/usage/:
    get:
      tags:
        - Resources
      summary: Outputs the current resource usage for the whole cluster
      operationId: currentUsage
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resources'
definitions:
  Resources:
    type: object
    properties:
      cpu:
        type: integer
      mem:
        type: integer
      storage:
        type: integer
  Metrics:
    type: object
    properties:
      methodId:
        type: string
      metricName:
        type: string
      aggregatedValue:
        type: string
    xml:
      name: Metrics
  metricRes:
    type: object
    properties:
      methodId:
        type: string
      result:
        type: integer
      resultUnit:
        type: string
  metricTimeRes:
    type: object
    properties:
      methodId:
        type: string
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time
      result:
        type: integer
      resultUnit:
        type: string
  Method:
    type: object
    properties:
      name:
        type: string
